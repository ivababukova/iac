AWSTemplateFormatVersion: "2010-09-09"
Description: Set up EC2 instance, can be accessed through SSM for connecting to RDS. For more information read https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager.html

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the role needs to be created.
  
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  SSMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: SSMInstanceProfile
      Roles: 
        - !Ref SSMRole

  SSMRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Basic SSM permissions for EC2
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore 
      RoleName: SSMInstanceProfile

  RDSAgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable encrypted HTTP traffic only (in/out)
      VpcId:
        Fn::ImportValue:
          !Sub 'eksctl-biomage-${Environment}-cluster::VPC'
    # this says who can access anyone within this security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  RDSAgent:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      IamInstanceProfile: !Ref SSMProfile
      ImageId: !Ref LatestAmiId
      SecurityGroupIds:
        - Ref: RDSAgentSecurityGroup
      SubnetId:
      #Pick first element in SubnetsPrivate
        !Select [ 0, Fn::Split: [',', Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::SubnetsPrivate"] ]
      # NetworkInterfaces: 
      #   - AssociatePublicIpAddress: false
      #     DeleteOnTermination: true
      #     DeviceIndex: "0"
          # SubnetId: 
          #   !Ref: "PublicSubnet"

Outputs:
  SecurityGroupId:
    Value: !Ref RDSAgentSecurityGroup
    Export:
      Name: !Sub "biomage-${Environment}-rds-agent::SecurityGroupId"