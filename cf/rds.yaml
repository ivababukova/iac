AWSTemplateFormatVersion: "2010-09-09"
Description: Set up RDS Aurora cluster [managed by github.com/hms-dbmi-cellenics/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the cluster needs to be created.

# --------------------------------------- Constants ---------------------------------------
  DBPort:
    Type: String
    Default: "5432"

  DBEngineVersion:
    Type: Number
    Default: 13.4

  DBSecretName:
    Description: The name of the secret used to store master user and password.
    Type: String
    Default: aurora-staging

Resources:
  DBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: 13.4
      # DBClusterParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterIdentifier: !Join [ "-", ["aurora-cluster", !Ref Environment] ]
      DatabaseName: "auroraDB"
      Port: !Ref DBPort
      # Can't be deleted before first setting this to false
      DeletionProtection: false
      MasterUsername: !Join ["", ["{{resolve:secretsmanager:", !Ref DBSecretName, ":SecretString:username}}" ]]
      MasterUserPassword: !Join ["", ["{{resolve:secretsmanager:", !Ref DBSecretName, ":SecretString:password}}" ]]
      EnableIAMDatabaseAuthentication: true
      BackupRetentionPeriod: 5
      SourceRegion: eu-west-1
      # Check if we want to change this
      StorageEncrypted: false
      VpcSecurityGroupIds: 
        - !Ref RDSSecurityGroup

  # We might not need this
  # DBParameterGroup:
  #   Type: AWS::RDS::DBParameterGroup
  #   Properties:
  #     Description: !Join [ "- ", [ "Parameter Group for database instance", !Ref DBClusterNameTemplate ] ]
  #     Family: aurora-postgresql13
  #     # Parameters:
  #       # shared_preload_libraries: "pg_stat_statements, pg_hint_plan"
  #     Tags:
  #       - Key: "Name"
  #         Value: RdsParameterGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Biomage subnet group for ${Environment}.
      DBSubnetGroupName: !Sub rds-subnet-group-${Environment}
      SubnetIds:
        Fn::Split: [',', Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::SubnetsPrivate"]
      Tags:
        - Key: "Name"
          Value: AuroraSubnetGroup

  DBInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier: !Ref DBCluster
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      # DBParameterGroupName: !Ref DBParameterGroup
      # MonitoringInterval: !If [IsProd, 1, 0]
      # MonitoringRoleArn: !If [IsProd, !GetAtt MonitoringIAMRole.Arn, !Ref "AWS::NoValue"]
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      EnablePerformanceInsights: true

  DBInstance2:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier: !Ref DBCluster
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      # DBParameterGroupName: !Ref DBParameterGroup
      # MonitoringInterval: !If [IsProd, 1, 0]
      # MonitoringRoleArn: !If [IsProd, !GetAtt MonitoringIAMRole.Arn, !Ref "AWS::NoValue"]
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      EnablePerformanceInsights: true
        
      # PerformanceInsightsKMSKeyId: !Ref AuroraKMSCMK
      # PerformanceInsightsRetentionPeriod: !If [IsProd, 731, 7]
      # Tags:
      #   - Key: "Name"
      #     Value: mypostgresdb
      # DBName:
      #   !Ref: DBName
      # DBInstanceClass:
      #   !Ref: DBInstanceClass
      # Engine: aurora-postgresql
      # EngineVersion: 10.11
      # VPCSecurityGroups: 
      #   - !Ref RDSSecurityGroup
      # StorageType: gp2
      # StorageEncrypted: "false"
      # EnablePerformanceInsights:
      #   !Ref: EnablePerformanceInsights
      # AutoMinorVersionUpgrade: true
      # BackupRetentionPeriod: 7
      # PubliclyAccessible: false
  
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Biomage RDS security group for ${Environment}"
      SecurityGroupEgress: []
      SecurityGroupIngress:
        - SourceSecurityGroupId: 
            Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::SharedNodeSecurityGroup"
          FromPort: !Ref DBPort
          IpProtocol: tcp
          ToPort: !Ref DBPort
        - SourceSecurityGroupId: 
            Fn::ImportValue: !Sub "biomage-${Environment}-rds-agent::SecurityGroupId"
          FromPort: '443'
          ToPort: '443'
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-security-group"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId:
        Fn::ImportValue:
          !Sub "eksctl-biomage-${Environment}-cluster::VPC"
  