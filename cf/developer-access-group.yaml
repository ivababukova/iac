AWSTemplateFormatVersion: "2010-09-09"
Description: Set up access rights to a given environment for development [managed by github.com/hms-dbmi-cellenics/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the access group is created.

Resources:
  DeveloperAccessGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub "engineer-${Environment}-access"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSStepFunctionsConsoleFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess
        - arn:aws:iam::aws:policy/ElasticLoadBalancingReadOnly
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Policies:
        - PolicyName: !Sub "can-manage-${Environment}-sqs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'sqs:*'
                Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:queue-job-*-${Environment}.fifo"

        - PolicyName: "access-to-cloudwatch"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "autoscaling:Describe*"
                  - "cloudwatch:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "logs:Get*"
                  - "logs:Describe*"
                  - "sns:Get*"
                  - "sns:List*"
                Resource: "*"

        - PolicyName: "access-to-ses"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ses:Get"
                  - "ses:List"
                  - "ses:SendEmail"
                  - "ses:PutIdentityPolicy"
                  - "ses:ListConfigurationSets"
                Resource: "*"

        - PolicyName: "can-access-s3-aws-console"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 's3:ListAllMyBuckets'
                Resource:
                  - "arn:aws:s3:::*"

        - PolicyName: !Sub "can-manage-${Environment}-s3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource:
                  - !Sub "arn:aws:s3:::*-${Environment}/*"

        - PolicyName: "can-create-xray-groups"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "xray:CreateGroup"
                  - "xray:UpdateGroup"
                Resource: "*"

        - PolicyName: !Sub "can-manage-${Environment}-sns"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'sns:*'
                Resource:
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:work-results-${Environment}-*"
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cloudwatch-alarms"
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cloudwatch-validation-alarms"

        - PolicyName: !Sub "can-access-${Environment}-eks-cluster"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'eks:DescribeCluster'
                Resource: !Sub "arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/biomage-${Environment}"

        - PolicyName: !Sub "can-manage-${Environment}-elasticache"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'elasticache:*'
                Resource: !Sub "arn:aws:elasticache:${AWS::Region}:${AWS::AccountId}:replicationgroup:biomage-redis-${Environment}"

        - PolicyName: !Sub "can-create-${Environment}-cognito-environments"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/ui-auth-user-role-${Environment}"

        - PolicyName: "can-manage-own-password-and-mfa"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:GetAccountPasswordPolicy"
                  - "iam:ListVirtualMFADevices"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "iam:ChangePassword"
                  - "iam:GetUser"
                  - "iam:CreateAccessKey"
                  - "iam:DeleteAccessKey"
                  - "iam:ListAccessKeys"
                  - "iam:UpdateAccessKey"
                  - "iam:DeleteSigningCertificate"
                  - "iam:ListSigningCertificates"
                  - "iam:UpdateSigningCertificate"
                  - "iam:UploadSigningCertificate"
                  - "iam:DeleteSSHPublicKey"
                  - "iam:GetSSHPublicKey"
                  - "iam:ListSSHPublicKeys"
                  - "iam:UpdateSSHPublicKey"
                  - "iam:UploadSSHPublicKey"
                  - "iam:CreateServiceSpecificCredential"
                  - "iam:DeleteServiceSpecificCredential"
                  - "iam:ListServiceSpecificCredentials"
                  - "iam:ResetServiceSpecificCredential"
                  - "iam:UpdateServiceSpecificCredential"
                  - "iam:CreateVirtualMFADevice"
                  - "iam:DeleteVirtualMFADevice"
                  - "iam:DeactivateMFADevice"
                  - "iam:EnableMFADevice"
                  - "iam:ListMFADevices"
                  - "iam:ResyncMFADevice"
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:user/${!aws:username}"

        - PolicyName: "can-see-user-and-group-policies"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:ListUsers"
                  - "iam:GetUser"
                  - "iam:ListGroups"
                  - "iam:ListGroupsForUser"
                  - "iam:GetGroup"
                  - "iam:ListRoles"
                  - "iam:GetRole"
                  - "iam:ListPolicies"
                  - "iam:ListUserPolicies"
                  - "iam:GetPolicy"
                  - "iam:GetRolePolicy"
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:group/*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:user/*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:policy/*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"

        - PolicyName: "can-access-eventbridge"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:ListRuleNamesByTarget
                  - events:ListRules
                  - events:ListTargetsByRule
                  - events:PutEvents
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:TestEventPattern
                Resource: !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:*"

        - PolicyName: "can-access-rds"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "rds-db:connect"
                Resource: 
                  - !Sub "arn:aws:rds-db:eu-west-1:${AWS::AccountId}:dbuser:*/dev_role"        
        # - PolicyName: "can-access-rds"
        #   PolicyDocument:
        #     Version: "2012-10-17"
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - "rds-db:connect"
        #         Resource: 
        #           - !Join
        #             - ""
        #             # * is for the db instance resource id, not the user
        #             - [ "arn:aws:rds-db:eu-west-1:", !Ref AWS::AccountId , ":dbuser:*/api" ]
                    
        #             # We use * because there's no straightforward way to get the DBInstance1ResourceId, this link has more information: https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/105
        #             # - [ "arn:aws:rds-db:", "eu-west-1:", !Ref AWS::AccountId , ":dbuser:", Fn::ImportValue: !Sub "biomage-${Environment}-rds::DBInstance1ResourceId", "api" ]
        #             # should look similar to this - "arn:aws:rds-db:eu-west-1:1234567890:dbuser:db-ABCDEFGHIJKL01234/postgres"